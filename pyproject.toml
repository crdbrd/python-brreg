[tool.poetry]
name = "brreg"
version = "1.0.0b1"
description = "API client for Brønnøysundregistrene."
authors = ["Stein Magnus Jodal <stein.magnus@jodal.no>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/jodal/python-brreg"
repository = "https://github.com/jodal/python-brreg"
documentation = "https://brreg.readthedocs.io"
keywords = ["brreg", "enhetsregisteret"]
classifiers = [
	"Development Status :: 5 - Production/Stable",
	"Intended Audience :: Developers",
	"Topic :: Software Development :: Libraries",
]

[tool.poetry.dependencies]
python = "^3.8.0"
httpx = ">= 0.24"
pydantic = ">= 2"
typing-extensions = ">= 4.4.0"

[tool.poetry.group.dev.dependencies]
nox = "^2023.4.22"

[tool.poetry.group.docs.dependencies]
sphinx = ">= 5.3"
sphinx-rtd-theme = ">= 1.2"
sphinx-autodoc-typehints = ">= 1.12"

[tool.poetry.group.mypy.dependencies]
mypy = "^1.7.0"

[tool.poetry.group.pyright.dependencies]
pyright = "^1.1.336"

[tool.poetry.group.ruff.dependencies]
ruff = "^0.1.4"

[tool.poetry.group.tests.dependencies]
coverage = { extras = ["toml"], version = "^7.3.2" }
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-httpx = "0.22.0"
pytest-watcher = "^0.3.4"

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["brreg"]

[tool.coverage.report]
fail_under = 85
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
filterwarnings = ["error::RuntimeWarning"]

[tool.mypy]
no_implicit_optional = true
warn_return_any = true
warn_redundant_casts = true
warn_unused_configs = true
strict_equality = true

[[tool.mypy.overrides]]
module = "brreg.*"
disallow_untyped_defs = true

[tool.ruff]
select = [
	"A",   # flake8-builtins
	"ANN", # flake8-annotations
	"ARG", # flake8-unused-arguments
	"B",   # flake8-bugbear
	"C4",  # flake8-comprehensions
	"C90", # mccabe
	# "D",   # pydocstyle  # TODO
	"DTZ", # flake8-datetimez
	"E",   # pycodestyle
	"ERA", # eradicate
	"F",   # pyflakes
	"FBT", # flake8-boolean-trap
	"I",   # isort
	"INP", # flake8-no-pep420
	"ISC", # flake8-implicit-str-concat
	"N",   # pep8-naming
	"PGH", # pygrep-hooks
	"PIE", # flake8-pie
	"PLC", # pylint convention
	"PLE", # pylint error
	"PLR", # pylint refactor
	"PLW", # pylint warning
	"PT",  # flake8-pytest-style
	"PTH", # flake8-use-pathlib
	"Q",   # flake8-quotes
	"RET", # flake8-return
	"RSE", # flake8-raise
	"RUF", # ruff
	"SIM", # flake8-simplify
	"SLF", # flake8-self
	"T20", # flake8-print
	"TCH", # flake8-type-checking
	"TID", # flake8-tidy-imports
	"TRY", # tryceratops
	"UP",  # pyupgrade
	"W",   # pycodestyle
]
ignore = [
	"A003",    # builtin-attribute-shadowing
	"ANN101",  # missing-type-self
	"ANN102",  # missing-type-cls
	"ISC001",  # single-line-implicit-string-concatenation
	"PLR2004", # magic-value-comparison
	"RET504",  # unnecessary-assign
	"TRY003",  # raise-vanilla-args
	#
	# Equivalent to `pyupgrade --keep-runtime-typing`:
	"UP006", # deprecated-collection-type
	"UP007", # typing-union
]
target-version = "py38"

[tool.ruff.per-file-ignores]
"docs/*" = ["INP001"]
"tests/*" = ["D"]

[tool.ruff.isort]
known-first-party = ["brreg"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.pyright]
pythonVersion = "3.8"
venvPath = "."
venv = ".venv"
typeCheckingMode = "strict"
# Already covered by tests and careful import ordering:
reportImportCycles = false
# Already covered by flake8-self:
reportPrivateUsage = false

[build-system]
requires = ["poetry-core>=1.0"]
build-backend = "poetry.core.masonry.api"
